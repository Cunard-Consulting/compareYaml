openapi: 3.0.1
info:
  title: Product Directory - InCR Register a new product or service in the catalog
  version: 1.0.0
servers:
  - url: http://localhost:3000/apis/B154/BIAN/ProductDirectory
paths:
  '/ProductDirectory/Register':
      post:
        tags:
          - CR - ProductDirectoryEntry
        summary: InCR Register a new product or service in the catalog
        description: >-
          InCR Register a new product or service in the
          catalog(ProductDirectoryEntry Relates to Capture and maintain
          reference information about some type of entitity within Product
          Directory.)
        operationId: ProductDirectoryEntry/Register
        x-schemas: true
        x-embeddings: true
        requestBody:
          $ref: "#/components/requestBodies/ProductDirectoryEntry"
        responses:
          '200':
            $ref: "#/components/responses/ProductDirectoryEntry"
  '/ProductDirectory/{ProductDirectoryEntryIdentification}/Retrieve':
    get:
      tags:
        - CR - ProductDirectoryEntry
      summary: Retrive Payment Order Procedure
      description: Retrive Payment Order Procedure
      operationId: Retrieve
      parameters:
        - $ref: '#/components/parameters/ProductDirectoryEntryIdentification'
      responses:
        '200':
          $ref: '#/components/responses/ProductDirectoryEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
components:
  schemas:
    ProductDirectoryEntry:
        type: object
        description: ''
        properties:
          ProductDirectoryEntryIdentification:
            type: string
            x-unique: true
            format: Identifier
            description: "A unique identifier for the Product Directory Entry"
            example: "507f1f77bcf86cd799439011" # Example MongoDB ObjectId
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/Text'
          ProductRefrence:
              $ref: '#/components/schemas/Product'
    Text:
        type: object
        description: "The current version of the product referenced in the directory ||\r\n|"
        properties:
          Text:
              type: string
              description: >-
                Text is a character string such as a finite set of characters
                generally in the form of words of a language. UN/CEFACT
              format: DataType
    Product:
        type: object
        description: >2-
           Product_x000D_Product
          https://www.iso20022.org/standardsrepository/type/Product|Standard|ISO20022
          BM 
        properties:
          ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
          ProductType:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
              type: string
              description: ">\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` "
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Productstatus'
          ProductPriority:
              $ref: '#/components/schemas/Text'
          ProductDescription:
              $ref: '#/components/schemas/Text'
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductName:
              $ref: '#/components/schemas/Name'
    Productidentification:
        type: object
        description: 'The identifier of product e.g. ISIN Code. '
        properties:
          ProductIdentification:
              $ref: '#/components/schemas/Identifier'
          ProductIdentificationType:
              enum:
                  -  ISINCode
                  -  PackageCode
                  -  Buyersitemnumber
                  -  EAN
                  -  Harmonizedtariffcodename
                  -  Manufacturersitemnumber
                  -  Modelnumber
                  -  Partnumber
                  -  Quotacategory
                  -  Stylenumber
                  -  Suppliersitemnumber
                  -  Universalproductcode
              type: string
              description: ">\r\n* `ISINCode` \r\n* `PackageCode` \r\n* `Buyersitemnumber` Product identifier assigned by the buyer.\r\n* `Commercialdescriptioncodename` A code to identify a product based on applicable commercial conditions.\r\n* `EAN` The unique EAN European Article Number code.\r\n* `Harmonizedtariffcodename` Classification of goods as developed by the Customs Cooperation council.\r\n* `Manufacturersitemnumber` Product identifier as assigned by the manufacturer.\r\n* `Modelnumber` Reference number assigned by the manufacturer to differentiate variations in similar products in a class or group.\r\n* `Partnumber` Reference assigned by the manufacturer to a product part.\r\n* `Quotacategory` Product identifier used by the retail industry.\r\n* `Stylenumber` Identification of the style of a product.\r\n* `Suppliersitemnumber` Number assigned to an article by the supplier of that article.\r\n* `Universalproductcode` Number assigned to a manufacturer's product by the Product Code Council."
    Identifier:
        type: object
        description: ' '
        properties:
          IdentifierValue:
              $ref: '#/components/schemas/Value'
          IdentifierIssuingAuthority:
              $ref: '#/components/schemas/Text'
          Identifier:
              type: string
              description: >-
                An identifier is a character string used to uniquely identify
                one instance of an object within an identification scheme that
                is managed by an agency. UN/CEFAT
              format: DataType
          IdentifierStartDate:
              $ref: '#/components/schemas/Datetime'
          IdentifierEndDate:
              $ref: '#/components/schemas/Datetime'
    Value:
        type: object
        description: ' '
        properties:
          Value:
              type: string
              description: >-
                Data or set of data 


                A value is the concept of worth in general that is assigned or
                is determined by measurement, assessment or calculation.
                UN/CEFACT
              format: DataType
    Involvedparty:
        type: object
        description: 'Entity that assigns and manages the identification. '
        properties:
          PartyReference:
              $ref: '#/components/schemas/Party'
          PartyInvolvement:
              $ref: '#/components/schemas/Partyrole'
    Party:
        type: object
        description: ' '
        properties:
          PartyName:
              $ref: '#/components/schemas/Name'
          PartyType:
              enum:
                  -  Person
                  -  Organisation
              type: string
              description: ">\r\n* `Person` Human entity, as distinguished from a corporate entity which is sometimes referred to as an 'artificial person'. ISO20022\r\n* `Organisation` Organised structure that is set up for a particular purpose. For example, a business, government body, department, charity, or financial institution. ISO20022"
          PartyDateTime:
              $ref: '#/components/schemas/Datetime'
          PartyIdentification:
              $ref: '#/components/schemas/Partyidentification'
          PartyLegalStructureType:
              enum:
                  -  Individual
                  -  CommunityInterestCompany
                  -  Co-Operative
                  -  Charity
                  -  GeneralPartnership
                  -  LimitedLiabilityPartnership
                  -  ScottishLimitedPartnership
                  -  LimitedPartnership
                  -  PrivateLimitedCompany
                  -  PublicLimitedCompany
                  -  SoleSoleTrader
              type: string
              description: ">\r\n* `Individual` \r\n* `CommunityInterestCompany` \r\n* `CharitableIncorporatedOrganisation` \r\n* `Co-Operative` \r\n* `Charity` \r\n* `GeneralPartnership` \r\n* `LimitedLiabilityPartnership` \r\n* `ScottishLimitedPartnership` \r\n* `LimitedPartnership` \r\n* `PrivateLimitedCompany` \r\n* `PublicLimitedCompany` \r\n* `SoleSoleTrader` "
    Name:
        type: object
        description: >-
          Name by which a party is known and which is usually used to identify
          that party. ISO20022
           
        properties:
          Name:
              type: string
              description: >-
                A name is a word or phrase that constitutes the distinctive
                designation of a person, place, thing or concept. UN/CEFAT
              format: DataType
    Datetime:
        type: object
        description: ' '
        properties:
          DateTimeContent:
              $ref: '#/components/schemas/Text'
          TimeZoneCode:
              $ref: '#/components/schemas/Text'
          DaylightSavingIndicator:
              $ref: '#/components/schemas/Text'
          DateTimeType:
              enum:
                  -  MaturityDate
                  -  InitiatedDate
                  -  RequestedDate
                  -  ExecutedDate
                  -  OpenDate
                  -  CloseDate
                  -  ExpiryDate
                  -  EffectiveDate
                  -  CreatingDate
                  -  ActivationDate
                  -  DeactivationDate
                  -  BlockingDate
                  -  SendingDate
                  -  ValidFromDate
                  -  ValidToDate
                  -  ReceivingDate
                  -  SigningDate
                  -  DueDate
                  -  ValueDate
                  -  FulfillmentDate
              type: string
              description: ">\r\n* `MaturityDate` \r\n* `InitiatedDate` \r\n* `RequestedDate` \r\n* `ExecutedDate` \r\n* `OpenDate` \r\n* `CloseDate` \r\n* `ExpiryDate` \r\n* `EffectiveDate` \r\n* `CreatingDate` \r\n* `ActivationDate` \r\n* `DeactivationDate` \r\n* `BlockingDate` \r\n* `SendingDate` \r\n* `ValidFromDate` \r\n* `ValidToDate` \r\n* `ReceivingDate` \r\n* `SigningDate` \r\n* `DueDate` \r\n* `ValueDate` \r\n* `FulfillmentDate` "
          Datetime:
              type: string
              description: >-
                A date time identifies a date and time of day to various common
                resolutions: year, month, week, day, hour, minute, second, and
                fraction of second. UN/CEFACT


                A particular point in the progression of time defined by a
                mandatory date and a mandatory time component, expressed in
                either UTC time format YYYY-MM-DDThh:mm:ss.sssZ, local time
                with UTC offset format YYYY-MM-DDThh:mm:ss.sss+/-hh:mm, or
                local time format YYYY-MM-DDThh:mm:ss.sss. These
                representations are defined in "XML Schema Part 2: Datatypes
                Second Edition W3C Recommendation 28 October 2004" which is
                aligned with ISO 8601. ISO20022

                Note on the time format:

                1 beginning / end of calendar day

                00:00:00  -  the beginning of a calendar day

                24:00:00  -  the end of a calendar day

                2 fractions of second in time format

                Decimal fractions of seconds may be included. In this case, the
                involved parties shall agree on the maximum number of digits
                that are allowed.
              format: DataType
    Partyidentification:
        type: object
        description: ' '
        properties:
          PartyIdentificationType:
              enum:
                  -  Taxidentificationnumber
                  -  Nationalregistrationnumber
                  -  LEILegalEntityIdentifier
                  -  Alienregistrationnumber
                  -  Passportnumber
                  -  Corporateidentification
                  -  Driverlicensenumber
                  -  Socialsecuritynumber
                  -  Identitycardnumber
                  -  Concat
              type: string
              description: ">\r\n* `Taxidentificationnumber` Number assigned by a tax authority to an entity.\r\n* `Nationalregistrationnumber` Number assigned by a national registration authority to an entity. In Singapore this is known as the NRIC. ISO20022\r\n* `Registrationauthorityidentification` An identifier for the Legal Entity in a business registry in the jurisdiction of legal registration, or in the appropriate registration authority. ISO20022\r\n* `LEILegalEntityIdentifier` \r\n* `Alienregistrationnumber` Number assigned by a government agency to identify foreign nationals.\r\n* `Passportnumber` Number assigned by a passport authority.\r\n* `Taxexemptidentificationnumber` Number assigned to a tax exempt entity.\r\n* `Corporateidentification` Number assigned to a corporate entity.\r\n* `Driverlicensenumber` Number assigned to a driver's license.\r\n* `Foreigninvestmentidentitynumber` Number assigned to a foreign investor other than the alien number.\r\n* `Socialsecuritynumber` Number assigned by a social security agency.\r\n* `Identitycardnumber` Number assigned by a national authority to an identity card.\r\n* `Concat` Number assigned by an issuer to identify a customer via the concatenation of the birthdate and characters of the first name and surname.\r\n* `Nationalregistrationidentificationnumber` National registration identification number. In Singapore this is known as the NRIC."
          PartyIdentification:
              $ref: '#/components/schemas/Identifier'
    Partyrole:
        type: object
        description: ' '
        properties:
          PartyRoleType:
              $ref: '#/components/schemas/Text'
          PartyRoleName:
              $ref: '#/components/schemas/Name'
          PartyRoleValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          PartyInvolvementType:
              enum:
                  -  Agreementinvolvement
                  -  Partyinvolvement
                  -  Arrangementinvolvement
                  -  Relationshipinvolvement
                  -  Locationinvolvement
                  -  Bankguaranteeinvolvement
              type: string
              description: ">\r\n* `Agreementinvolvement` \r\n* `Partyinvolvement` \r\n* `Arrangementinvolvement` \r\n* `Designspecificationinvolvement` \r\n* `Relationshipinvolvement` \r\n* `Locationinvolvement` \r\n* `Bankguaranteeinvolvement` "
    Datetimeperiod:
        type: object
        description: ' '
        properties:
          FromDateTime:
              $ref: '#/components/schemas/Datetime'
          ToDateTime:
              $ref: '#/components/schemas/Datetime'
          Datetimeperiod:
              type: string
              description: >-
                Time span defined by a start date and time, and an end date and
                time. ISO20022
              format: DataType
    Productstatus:
        type: object
        description: >-
          Refers to the lifecycle of a product e.g., initiated, announced,
          active, obsolete, withdrawn. 
        properties:
          ProductStatus:
              $ref: '#/components/schemas/Status'
          ProductStatusType:
              enum:
                  -  Initiated
                  -  Announced
                  -  Sold
                  -  Obsolete
                  -  Active
              type: string
              description: ">\r\n* `Initiated` \r\n* `Announced` \r\n* `Sold` \r\n* `Obsolete` \r\n* `Active` "
    Status:
        type: object
        description: ' '
        properties:
          StatusReason:
              $ref: '#/components/schemas/Text'
          StatusDateTime:
              $ref: '#/components/schemas/Datetime'
          StatusValidityPeriod:
              $ref: '#/components/schemas/Datetimeperiod'
          StatusInvolvedParty:
              $ref: '#/components/schemas/Involvedparty'
    RegisterProductDirectoryEntryResponse:
        type: object
        description: ''
        properties:
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
          ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
    BankingProduct:
        type: object
        description: >2-
           Product_x000D_Product
          https://www.iso20022.org/standardsrepository/type/Product|Standard|ISO20022
          BM 
        properties:
          ProductIdentification:
              $ref: '#/components/schemas/Productidentification'
          ProductType:
              enum:
                  -  LoanProduct
                  -  CurrentAccountProduct
                  -  SavingAccountProduct
                  -  BrokeredProduct
                  -  TermDepositProduct
              type: string
              description: ">\r\n* `LoanProduct` \r\n* `CurrentAccountProduct` \r\n* `SavingAccountProduct` \r\n* `BrokeredProduct` \r\n* `TermDepositProduct` "
          ProductLifecycleStatus:
              $ref: '#/components/schemas/Productstatus'
          ProductPriority:
              $ref: '#/components/schemas/Text'
          ProductDescription:
              $ref: '#/components/schemas/Text'
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductName:
              $ref: '#/components/schemas/Name'
    RegisterProductDirectoryEntry:
        type: object
        description: ''
        properties:
          ProductVersion:
              $ref: '#/components/schemas/Text'
          ProductDirectoryEntryConfiguration:
              $ref: '#/components/schemas/ProductDirectoryEntry'
          ProductRefrence:
              $ref: '#/components/schemas/BankingProduct'
    HTTPError:
        type: object
        properties:
          status_code:
            type: string
            format: string
          status:
            type: string
            format: string
          message:
            type: string
            format: string
        description: Status Attributes
  requestBodies:
    ProductDirectoryEntry:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ProductDirectoryEntry'
        required: true
  responses:
    ProductDirectoryEntry:
        description: ProductDirectoryEntryRegister
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/ProductDirectoryEntry'
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    TooManyRequests:
      description: TooManyRequests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
    InternalServerError:
      description: InternalServerError
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HTTPError'
  parameters:
    ProductDirectoryEntryIdentification:
      name: ProductDirectoryEntryIdentification
      in: path
      required: true
      style: simple
      schema:
        type: string
